{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        {
            "label": "1. Install Python dependencies management",
            "type": "shell",
            "command": "python -m pip install --upgrade pip poetry",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [],
        },
        {
            "label": "2. Install DEV virtual environment",
            "type": "shell",
            "command": "rm -rf .venv && poetry config virtualenvs.in-project true && poetry install --no-root",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [],
            "windows": {
                "command": "Remove-Item .\\.venv -Recurse -Force ; poetry config virtualenvs.in-project true ; poetry install --no-root",
                "options": {
                    "cwd": "${workspaceFolder}"
                },
                "problemMatcher": []
            }
        },
        {
            "label": "2. Install PROD virtual environment",
            "type": "shell",
            "command": "rm -rf .venv && poetry config virtualenvs.in-project true && poetry install --no-root --no-dev",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [],
            "windows": {
                "command":  "Remove-Item .\\.venv -Recurse -Force ; poetry config virtualenvs.in-project true ; poetry install --no-root --no-dev",
                "options": {
                    "cwd": "${workspaceFolder}"
                },
                "problemMatcher": []
            }
        },
        {
            "label": "3. Build and install project",
            "type": "shell",
            "command": "source .venv/bin/activate && poetry build && poetry install",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [],
            "windows": {
                "command": ".\\.venv\\Scripts\\Activate.ps1 ; poetry build ; poetry install",
                "options": {
                    "cwd": "${workspaceFolder}"
                },
                "problemMatcher": []
            }
        },
        {
            "label": "4. Code clean (all files)",
            "type": "shell",
            "command": "source .venv/bin/activate && pre-commit run --verbose --all-files --show-diff-on-failure",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [],
            "windows": {
                "command": ".\\.venv\\Scripts\\Activate.ps1 ; pre-commit run --verbose --all-files --show-diff-on-failure",
                "options": {
                    "cwd": "${workspaceFolder}"
                },
                "problemMatcher": []
            }
        },
        {
            "label": "4. Code clean (files have changed)",
            "type": "shell",
            "command": "source .venv/bin/activate && pre-commit run --verbose --show-diff-on-failure",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [],
            "windows": {
                "command": ".\\.venv\\Scripts\\Activate.ps1 ; pre-commit run --verbose --show-diff-on-failure",
                "options": {
                    "cwd": "${workspaceFolder}"
                },
                "problemMatcher": []
            }
        },
        {
            "label": "5. Code coverage",
            "type": "shell",
            "command": "source .venv/bin/activate &&  coverage run -m pytest tests",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [],
            "windows": {
                "command": ".\\.venv\\Scripts\\Activate.ps1 ;  coverage run -m pytest tests",
                "options": {
                    "cwd": "${workspaceFolder}"
                },
                "problemMatcher": []
            }
        }
    ]
}
